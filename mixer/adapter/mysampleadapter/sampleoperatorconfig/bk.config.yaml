# instance configuration for template 'metric'
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
 name: requestcount
 namespace: istio-system
spec:
 value: "1"
 dimensions:
   source: source.labels["app"] | "unknown"
   target: destination.service | "unknown"
   service: destination.labels["app"] | "unknown"
   method: request.path | "unknown"
   version: destination.labels["version"] | "unknown"
   response_code: response.code | 200
 monitored_resource_type: '"UNSPECIFIED"'
---
# Configuration for a Prometheus handler
apiVersion: "config.istio.io/v1alpha2"
kind: prometheus
metadata:
  name: turbohandler
  namespace: default
spec:
  metrics:
  - name: turbo_service_request_count
    instance_name: turbosvcrequestcount.metric.default
    kind: COUNTER
    label_names:
    - target
    - response_code

---
# handler configuration for adapter 'metric'
apiVersion: "config.istio.io/v1alpha2"
kind: mysampleadapter
metadata:
 name: hndlrTest
 namespace: istio-system
spec:
 file_path: "/tmp/my.adapter.out.txt"
---
# rule to dispatch to your handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
 name: mysamplerule
 namespace: istio-system
spec:
 match: "true"
 actions:
 - handler: hndlrTest.mysampleadapter.istio-system
   instances:
   - requestcount.metric.istio-system
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: turbo
  namespace: default
spec:
  match: context.protocol == "http"
  actions:
  - handler: turbohandler.prometheus.default
    instances:
    - turbosvcrequestcount.metric.default
